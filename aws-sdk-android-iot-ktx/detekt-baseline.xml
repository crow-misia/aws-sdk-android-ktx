<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues>
    <ID>LongParameterList:AWSIoTSecurityTokenServiceClient.kt$AWSIoTSecurityTokenServiceClient$( keyStore: KeyStore, password: CharArray, caCertificates: Array&lt;X509Certificate>, stsEndpoint: String, roleAliasName: String, okHttpClient: OkHttpClient, clientConfiguration: ClientConfiguration = ClientConfiguration(), )</ID>
    <ID>LongParameterList:AWSIoTSecurityTokenServiceClient.kt$AWSIoTSecurityTokenServiceClient$( keyStore: KeyStore, password: String = AWSIotKeystoreHelper.AWS_IOT_INTERNAL_KEYSTORE_PASSWORD, caCertificates: Array&lt;X509Certificate>, stsEndpoint: String, roleAliasName: String, okHttpClient: OkHttpClient, clientConfiguration: ClientConfiguration = ClientConfiguration(), )</ID>
  </ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>LongParameterList:AWSIoTSecurityTokenServiceClient.kt$AWSIoTSecurityTokenServiceClient$( keyStore: KeyStore, password: CharArray, caCertificates: Array&lt;X509Certificate>, stsEndpoint: String, roleAliasName: String, okHttpClient: OkHttpClient, clientConfiguration: ClientConfiguration = ClientConfiguration(), )</ID>
    <ID>LongParameterList:AWSIoTSecurityTokenServiceClient.kt$AWSIoTSecurityTokenServiceClient$( keyStore: KeyStore, password: String = AWSIotKeystoreHelper.AWS_IOT_INTERNAL_KEYSTORE_PASSWORD, caCertificates: Array&lt;X509Certificate>, stsEndpoint: String, roleAliasName: String, okHttpClient: OkHttpClient, clientConfiguration: ClientConfiguration = ClientConfiguration(), )</ID>
  </CurrentIssues>
</SmellBaseline>
